{"version":3,"sources":["components/Filter.js","components/Person.js","components/Persons.js","components/PersonForm.js","services/PersonData.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","Person","person","handleDelete","name","number","onClick","Persons","persons","map","key","id","PersonForm","nameHandler","numberHandler","addNameHandler","onSubmit","type","baseUrl","axios","get","then","response","data","post","delete","put","Notification","notification","message","className","console","log","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setNotification","showNotification","newNotification","emptyNotification","setTimeout","personsToShow","filter","toLowerCase","match","updatePersons","PersonData","responseData","catch","error","alert","useEffect","event","target","preventDefault","foundPerson","find","p","changedPerson","window","confirm","status","concat","addPerson","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2d9150f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <div>\r\n            filter shown with: <input value={value} onChange={onChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Person = ({ person, handleDelete }) => {\r\n  return (\r\n    <li>\r\n        {person.name} {person.number}\r\n        <button onClick={handleDelete}>delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, handleDelete }) => {\r\n    return (\r\n        <ul>\r\n            {persons.map((person) =>\r\n                <Person key={person.id} person={person} handleDelete={() => handleDelete(person)} />\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = ({ name, number, nameHandler, numberHandler, addNameHandler }) => {\r\n    return (\r\n        <form onSubmit={addNameHandler}>\r\n            <div>\r\n                name: <input value={name} onChange={nameHandler} />\r\n            </div>\r\n            <div>\r\n                number: <input value={number} onChange={numberHandler} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\nconst addPerson = (person) => {\r\n    return axios.post(baseUrl, person).then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (person) => {\r\n    return axios.delete(`${baseUrl}/${person.id}`).then(response => response.data)\r\n}\r\n\r\nconst updatePerson = (person) => {\r\n    return axios.put(`${baseUrl}/${person.id}`, person).then(response => response.data)\r\n}\r\n\r\nexport default { getAll, addPerson, deletePerson, updatePerson }","import React from 'react'\r\n\r\nconst Notification = ({notification}) => {\r\n    if (notification === null || notification.message === null || notification.className === null) {\r\n        return null\r\n    }\r\n\r\n    console.log(notification)\r\n    \r\n    return (\r\n        <div className={notification.className}>\r\n            {notification.message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport PersonData from './services/PersonData'\nimport Notification from './components/Notification'\n\nconst classNameError = 'error'\nconst classNameInformation = 'information'\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newFilter, setNewFilter] = useState('')\n    const [notification, setNotification] = useState({ message: null, className: null })\n\n    const showNotification = (message, className) => {\n        const newNotification = { message: message, className: className }\n        const emptyNotification = { message: null, className: null }\n\n        console.log(className, message)\n\n        setNotification(newNotification)\n        setTimeout(() => {\n            setNotification(emptyNotification)\n        }, 5000)\n    }\n\n    const updatePerson = (person) => {\n        PersonData\n            .updatePerson(person)\n            .then(responseData => {\n                console.log('person updated')\n                setPersons(persons.map(p => p.id !== person.id ? p : responseData))\n                setNewName('')\n                setNewNumber('')\n                showNotification(`Updated ${responseData.name}`, classNameInformation)\n            })\n            .catch(error => {\n                if (error.response.status === 404) {\n                    showNotification(`Failed updating person. ${person.name} has already been deleted from the server.`, classNameError)\n                } else {\n                    showNotification(`Failed updating person. ${error.message}`, classNameError)\n                }\n                updatePersons()\n            })\n    }\n\n    const addPerson = (person) => {\n\n        PersonData\n            .addPerson(person)\n            .then(responseData => {\n                console.log('person added')\n                setPersons(persons.concat(responseData))\n                setNewName('')\n                setNewNumber('')\n                showNotification(`Added ${responseData.name}`, classNameInformation)\n            })\n            .catch(error => {\n                console.log(error.response.data)\n                showNotification(`Failed adding new person. ${error.response.data.error}`, classNameError)\n            })\n    }\n\n    const handleAddPerson = (event) => {\n        console.log(`Adding new name ${newName}`)\n        event.preventDefault()\n\n        if (!newName) {\n            showNotification(\"Name is mandatory.\", classNameError)\n            return\n        }\n\n        if (!newNumber) {\n            showNotification(\"Number is mandatory.\", classNameError)\n            return\n        }\n\n        const foundPerson = persons.find(p => p.name === newName)\n\n        // Updating existing person\n        if (foundPerson) {\n            let changedPerson = { ...foundPerson, number: newNumber }\n            if (window.confirm(`${changedPerson.name} is already added to phonebook, replace the old number with new one?`)) {\n                updatePerson(changedPerson)\n            }\n            return\n        }\n\n        // Adding new person (id is generated on server side)\n        const newPersonObject = {\n            name: newName,\n            number: newNumber\n        }\n        addPerson(newPersonObject)\n    }\n\n    const handleDelete = (person) => {\n        if (window.confirm(`Really delete ${person.name}?`)) {\n            console.log(`Deleting ${person.name}`)\n            PersonData\n                .deletePerson(person)\n                .then(responseData => {\n                    console.log('person deleted')\n                    updatePersons()\n                    showNotification(`Deleted ${person.name}`, classNameInformation)\n                })\n                .catch(error => {\n                    if (error.response.status === 404) {\n                        showNotification(`Failed deleting person. ${person.name} has already been deleted from the server.`, classNameError)\n                    } else {\n                        showNotification(`Failed deleting person. ${error.message}`, classNameError)\n                    }\n                    updatePersons()\n                })\n        }\n    }\n\n    const handleNameChange = (event) => {\n        console.log(event.target.value)\n        setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        console.log(event.target.value)\n        setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        console.log(event.target.value)\n        setNewFilter(event.target.value)\n    }\n\n    let isPerson = (person) => person.name.toLowerCase().match(newFilter.toLowerCase())\n    const personsToShow = persons.filter(isPerson)\n\n    const updatePersons = () => {\n        PersonData\n            .getAll()\n            .then(responseData => {\n                console.log('get all persons ok')\n                setPersons(responseData)\n            })\n            .catch(error => {\n                alert(error + \"\\nDid you remember to start json server (npm run server)?\")\n            })\n    }\n\n    useEffect(() => {\n        console.log('effect')\n        updatePersons()\n    }, [])\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification notification={notification} />\n            <Filter value={newFilter} onChange={handleFilterChange} />\n            <h3>Add a new</h3>\n            <PersonForm name={newName} number={newNumber} nameHandler={handleNameChange} numberHandler={handleNumberChange} addNameHandler={handleAddPerson} />\n            <h3>Numbers</h3>\n            <Persons persons={personsToShow} handleDelete={handleDelete} />\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}